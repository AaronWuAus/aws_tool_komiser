{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { StoreService } from './store.service';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./store.service\";\nexport var AzureService = /*#__PURE__*/(function () {\n  var AzureService = /*#__PURE__*/function () {\n    function AzureService(http, storeService) {\n      _classCallCheck(this, AzureService);\n\n      this.http = http;\n      this.storeService = storeService;\n      this.BASE_URL = \"\".concat(environment.apiUrl, \"/azure\");\n    }\n\n    _createClass(AzureService, [{\n      key: \"getVMs\",\n      value: function getVMs() {\n        var _this = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/vms\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSnapshots\",\n      value: function getSnapshots() {\n        var _this2 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/snapshots\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this2.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDisks\",\n      value: function getDisks() {\n        var _this3 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/disks\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this3.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKubernetesClusters\",\n      value: function getKubernetesClusters() {\n        var _this4 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/managedclusters/clusters\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this4.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getMySQLs\",\n      value: function getMySQLs() {\n        var _this5 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/mysqls\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this5.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getPostgreSQLs\",\n      value: function getPostgreSQLs() {\n        var _this6 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/postgresqls\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this6.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRedisInstances\",\n      value: function getRedisInstances() {\n        var _this7 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/redis\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this7.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getFirewalls\",\n      value: function getFirewalls() {\n        var _this8 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security/firewalls\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this8.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getPublicIPs\",\n      value: function getPublicIPs() {\n        var _this9 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/publicips\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this9.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLoadBalancers\",\n      value: function getLoadBalancers() {\n        var _this10 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/loadbalancers\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this10.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getProfiles\",\n      value: function getProfiles() {\n        var _this11 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security/profiles\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this11.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSecurityGroups\",\n      value: function getSecurityGroups() {\n        var _this12 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security/securitygroups\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this12.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSecurityRules\",\n      value: function getSecurityRules() {\n        var _this13 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security/securityrules\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this13.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRouteTables\",\n      value: function getRouteTables() {\n        var _this14 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/routetables\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this14.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVirtualNetworks\",\n      value: function getVirtualNetworks() {\n        var _this15 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/virtualnetworks\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this15.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSubnets\",\n      value: function getSubnets() {\n        var _this16 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/subnets\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this16.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDNSZones\",\n      value: function getDNSZones() {\n        var _this17 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/network/dnszones\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this17.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCertificates\",\n      value: function getCertificates() {\n        var _this18 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/acm/certificates\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this18.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getExpiredCertificates\",\n      value: function getExpiredCertificates() {\n        var _this19 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/acm/expired\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this19.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getTotalCost\",\n      value: function getTotalCost() {\n        var _this20 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/billing/total\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this20.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }]);\n\n    return AzureService;\n  }();\n\n  AzureService.Éµfac = function AzureService_Factory(t) {\n    return new (t || AzureService)(i0.ÉµÉµinject(i1.HttpClient), i0.ÉµÉµinject(i2.StoreService));\n  };\n\n  AzureService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: AzureService,\n    factory: AzureService.Éµfac\n  });\n  return AzureService;\n})();","map":null,"metadata":{},"sourceType":"module"}