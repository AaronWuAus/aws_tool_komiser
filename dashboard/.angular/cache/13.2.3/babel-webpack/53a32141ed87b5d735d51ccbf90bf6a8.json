{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { GcpService } from '../../gcp.service';\nimport * as Chartist from 'chartist';\nimport 'chartist-plugin-tooltips';\nimport * as $ from \"jquery\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../gcp.service\";\n\nfunction GcpComputeComponent_h4_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.runningVMInstances);\n  }\n}\n\nfunction GcpComputeComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.stoppedVMInstances);\n  }\n}\n\nfunction GcpComputeComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.images);\n  }\n}\n\nfunction GcpComputeComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nvar _c0 = function _c0() {\n  return [\"#2196F3\"];\n};\n\nfunction GcpComputeComponent_tr_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 41);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"ngx-trend\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r20 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(instance_r20.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"\", instance_r20.series[instance_r20.series.length - 1], \"%\");\n    i0.ɵɵproperty(\"gradient\", i0.ɵɵpureFunction0(4, _c0))(\"data\", instance_r20.series);\n  }\n}\n\nfunction GcpComputeComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GcpComputeComponent_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GcpComputeComponent_h4_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.cloudFunctions.golang);\n  }\n}\n\nfunction GcpComputeComponent_div_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.cloudFunctions.python);\n  }\n}\n\nfunction GcpComputeComponent_div_112_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_124_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.cloudFunctions.node);\n  }\n}\n\nfunction GcpComputeComponent_div_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_138_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.kubernetesClusters);\n  }\n}\n\nfunction GcpComputeComponent_div_139_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_h4_150_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.kubernetesNodes);\n  }\n}\n\nfunction GcpComputeComponent_div_151_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 40);\n  }\n}\n\nfunction GcpComputeComponent_div_174_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var GcpComputeComponent = /*#__PURE__*/(function () {\n  var GcpComputeComponent = /*#__PURE__*/function () {\n    function GcpComputeComponent(gcpService) {\n      var _this = this;\n\n      _classCallCheck(this, GcpComputeComponent);\n\n      this.gcpService = gcpService;\n      this.runningVMInstances = 0;\n      this.stoppedVMInstances = 0;\n      this.instancesWithCPUUtilization = [];\n      this.returnedInstancesWithCPUUtilization = [];\n      this.loadingRunningInstances = true;\n      this.loadingStoppedInstances = true;\n      this.loadingInstancesPrivacyChart = true;\n      this.loadingInstancesFamilyChart = true;\n      this.loadingCloudFunctions = true;\n      this.loadingKubernetesNodes = true;\n      this.loadingKubernetesClusters = true;\n      this.loadingImages = true;\n      this.loadingGaeBandwidthChart = true;\n      this.zones = new Map([[\"asia-east1\", {\n        \"latitude\": \"23.697809\",\n        \"longitude\": \"120.960518\"\n      }], [\"asia-east2\", {\n        \"latitude\": \"22.396427\",\n        \"longitude\": \"114.109497\"\n      }], [\"asia-northeast1\", {\n        \"latitude\": \"35.689487\",\n        \"longitude\": \"139.691711\"\n      }], [\"asia-south1\", {\n        \"latitude\": \"19.075983\",\n        \"longitude\": \"72.877655\"\n      }], [\"asia-southeast1\", {\n        \"latitude\": \"1.339637\",\n        \"longitude\": \"103.707339\"\n      }], [\"australia-southeast1\", {\n        \"latitude\": \"43.498299\",\n        \"longitude\": \"2.375200\"\n      }], [\"europe-north1\", {\n        \"latitude\": \"60.568890\",\n        \"longitude\": \"27.188188\"\n      }], [\"europe-west1\", {\n        \"latitude\": \"50.447748\",\n        \"longitude\": \"3.819524\"\n      }], [\"europe-west2\", {\n        \"latitude\": \"51.507322\",\n        \"longitude\": \"-0.127647\"\n      }], [\"europe-west3\", {\n        \"latitude\": \"50.110644\",\n        \"longitude\": \"8.682092\"\n      }], [\"europe-west4\", {\n        \"latitude\": \"53.448402\",\n        \"longitude\": \"6.846503\"\n      }], [\"europe-west6\", {\n        \"latitude\": \"47.376888\",\n        \"longitude\": \"8.541694\"\n      }], [\"northamerica-northeast1\", {\n        \"latitude\": \"45.509060\",\n        \"longitude\": \"-73.553360\"\n      }], [\"southamerica-east1\", {\n        \"latitude\": \"23.550651\",\n        \"longitude\": \"-46.633382\"\n      }], [\"us-central1\", {\n        \"latitude\": \"41.262128\",\n        \"longitude\": \"-95.861391\"\n      }], [\"us-east1\", {\n        \"latitude\": \"33.196003\",\n        \"longitude\": \"-80.013137\"\n      }], [\"us-east4\", {\n        \"latitude\": \"39.029265\",\n        \"longitude\": \"-77.467387\"\n      }], [\"us-west1\", {\n        \"latitude\": \"45.601506\",\n        \"longitude\": \"-121.184159\"\n      }], [\"us-west2\", {\n        \"latitude\": \"34.053691\",\n        \"longitude\": \"-118.242767\"\n      }]]);\n      this.cloudFunctions = {\n        golang: 0,\n        python: 0,\n        node: 0\n      };\n      this.gcpService.getComputeInstances().subscribe(function (data) {\n        _this.loadingRunningInstances = false;\n        _this.loadingStoppedInstances = false;\n        _this.loadingInstancesPrivacyChart = false;\n        _this.loadingInstancesFamilyChart = false;\n        var publicInstances = 0;\n        var machineTypes = new Map();\n        data.forEach(function (instance) {\n          if (instance.status == 'RUNNING') {\n            _this.runningVMInstances++;\n          }\n\n          if (instance.status == 'TERMINATED') {\n            _this.stoppedVMInstances++;\n          }\n\n          if (instance.public) {\n            publicInstances++;\n          }\n\n          machineTypes[instance.machineType] = (machineTypes[instance.machineType] ? machineTypes[instance.machineType] : 0) + 1;\n        });\n        var labels = [];\n        var series = [];\n        var colors = [];\n\n        for (var machine in machineTypes) {\n          labels.push(machine);\n          series.push(machineTypes[machine]);\n          colors.push(_this.getRandomColor());\n        }\n\n        _this.showInstanceFamilies(labels, series, colors);\n\n        _this.showInstancesPrivacy([publicInstances, data.length - publicInstances]);\n      }, function (err) {\n        _this.loadingRunningInstances = false;\n        _this.loadingStoppedInstances = false;\n        _this.loadingInstancesPrivacyChart = false;\n        _this.loadingInstancesFamilyChart = false;\n      });\n      this.gcpService.getCloudFunctions().subscribe(function (data) {\n        Object.keys(data).forEach(function (runtime) {\n          if (runtime.startsWith(\"nodejs\")) {\n            _this.cloudFunctions.node++;\n          }\n\n          if (runtime.startsWith(\"go\")) {\n            _this.cloudFunctions.golang++;\n          }\n\n          if (runtime.startsWith(\"python\")) {\n            _this.cloudFunctions.python++;\n          }\n        });\n        _this.loadingCloudFunctions = false;\n      }, function (err) {\n        _this.loadingCloudFunctions = false;\n        _this.cloudFunctions = {\n          golang: 0,\n          python: 0,\n          node: 0\n        };\n      });\n      this.gcpService.getKubernetesClusters().subscribe(function (data) {\n        _this.loadingKubernetesClusters = false;\n        _this.loadingKubernetesNodes = false;\n        _this.kubernetesClusters = data.length;\n        _this.kubernetesNodes = 0;\n        data.forEach(function (cluster) {\n          _this.kubernetesNodes += cluster.nodes;\n        });\n        var scope = _this;\n\n        var _usedRegions = new Map();\n\n        var plots = {};\n        data.forEach(function (cluster) {\n          var region = cluster.zone.substring(0, cluster.zone.lastIndexOf(\"-\"));\n          _usedRegions[region] = (_usedRegions[region] ? _usedRegions[region] : 0) + 1;\n        });\n\n        for (var region in _usedRegions) {\n          plots[region] = {\n            latitude: scope.zones.get(region).latitude,\n            longitude: scope.zones.get(region).longitude,\n            value: [_usedRegions[region], 1],\n            tooltip: {\n              content: \"\".concat(region, \"<br />Clusters: \").concat(_usedRegions[region])\n            }\n          };\n        }\n\n        Array.from(_this.zones.keys()).forEach(function (region) {\n          var found = false;\n\n          for (var _region in plots) {\n            if (_region == region) {\n              found = true;\n            }\n          }\n\n          if (!found) {\n            plots[region] = {\n              latitude: _this.zones.get(region).latitude,\n              longitude: _this.zones.get(region).longitude,\n              value: [_usedRegions[region], 0],\n              tooltip: {\n                content: \"\".concat(region, \"<br />Clusters: 0\")\n              }\n            };\n          }\n        });\n\n        _this.showKubernetesClusters(plots);\n      }, function (err) {\n        _this.kubernetesClusters = 0;\n        _this.kubernetesNodes = 0;\n        _this.loadingKubernetesClusters = false;\n        _this.loadingKubernetesNodes = false;\n      });\n      this.gcpService.getComputeImages().subscribe(function (data) {\n        _this.images = data.length;\n        _this.loadingImages = false;\n      }, function (err) {\n        _this.images = 0;\n        _this.loadingImages = false;\n      });\n      this.gcpService.getComputeCPUUtilization().subscribe(function (data) {\n        data.forEach(function (metric) {\n          var series = [];\n          metric.points.forEach(function (point) {\n            series.push(+point.value.doubleValue.toFixed(1));\n          });\n\n          if (metric.points.length <= 1) {\n            series.push(0);\n          }\n\n          _this.instancesWithCPUUtilization.push({\n            name: metric.metric.labels.instance_name,\n            series: series.reverse()\n          });\n        });\n        _this.returnedInstancesWithCPUUtilization = _this.instancesWithCPUUtilization.slice(0, 3);\n        console.log(_this.returnedInstancesWithCPUUtilization);\n      }, function (err) {\n        _this.instancesWithCPUUtilization = [];\n        _this.returnedInstancesWithCPUUtilization = [];\n      });\n      this.gcpService.getAppEngineBandwidth().subscribe(function (data) {\n        var availablePeriods = [];\n        data.forEach(function (resource) {\n          resource.points.forEach(function (point) {\n            var timestamp = new Date(point.interval.endTime).toISOString().split('T')[0];\n\n            if (!availablePeriods.includes(timestamp)) {\n              availablePeriods.push(timestamp);\n            }\n          });\n        });\n        availablePeriods.sort(function (a, b) {\n          return new Date(b).getTime() - new Date(a).getTime();\n        });\n        availablePeriods = availablePeriods.reverse();\n        var total = 0;\n        var series = [];\n        data.forEach(function (resource) {\n          var serie = [];\n          availablePeriods.forEach(function (period) {\n            var found = false;\n            resource.points.forEach(function (point) {\n              var timestamp = new Date(point.interval.endTime).toISOString().split('T')[0];\n\n              if (timestamp == period) {\n                serie.push({\n                  meta: 'Sent Bytes',\n                  value: point.value.int64Value\n                });\n                found = true;\n              }\n            });\n\n            if (!found) {\n              serie.push({\n                meta: 'Sent Bytes',\n                value: 0\n              });\n            }\n          });\n          total += serie[serie.length - 1].value / 1024 / 1024;\n          series.push(serie);\n        });\n        console.log(series);\n        _this.loadingGaeBandwidthChart = false;\n\n        _this.showAppEngineBandwidth(availablePeriods, series);\n      }, function (err) {\n        _this.loadingGaeBandwidthChart = false;\n      });\n    }\n\n    _createClass(GcpComputeComponent, [{\n      key: \"showAppEngineBandwidth\",\n      value: function showAppEngineBandwidth(labels, series) {\n        var scope = this;\n        new Chartist.Bar('#gaeBandwidthChart', {\n          labels: labels,\n          series: series\n        }, {\n          plugins: [Chartist.plugins.tooltip()],\n          stackBars: true,\n          axisY: {\n            offset: 80,\n            labelInterpolationFnc: function labelInterpolationFnc(value) {\n              return scope.bytesToSizeWithUnit(value);\n            }\n          }\n        }).on('draw', function (data) {\n          if (data.type === 'bar') {\n            data.element.attr({\n              style: 'stroke-width: 30px'\n            });\n          }\n        });\n      }\n    }, {\n      key: \"pageChanged\",\n      value: function pageChanged(event) {\n        var startItem = (event.page - 1) * event.itemsPerPage;\n        var endItem = event.page * event.itemsPerPage;\n        this.returnedInstancesWithCPUUtilization = this.instancesWithCPUUtilization.slice(startItem, endItem);\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.showKubernetesClusters({});\n      }\n    }, {\n      key: \"showKubernetesClusters\",\n      value: function showKubernetesClusters(plots) {\n        var canvas = $(\".kubeclustersmap\");\n        canvas.mapael({\n          map: {\n            name: \"world_countries\",\n            zoom: {\n              enabled: true,\n              maxLevel: 10\n            },\n            defaultPlot: {\n              attrs: {\n                fill: \"#004a9b\",\n                opacity: 0.6\n              }\n            },\n            defaultArea: {\n              attrs: {\n                fill: \"#e4e4e4\",\n                stroke: \"#fafafa\"\n              },\n              attrsHover: {\n                fill: \"#FBAD4B\"\n              },\n              text: {\n                attrs: {\n                  fill: \"#505444\"\n                },\n                attrsHover: {\n                  fill: \"#000\"\n                }\n              }\n            }\n          },\n          legend: {\n            plot: [{\n              labelAttrs: {\n                fill: \"#f4f4e8\"\n              },\n              titleAttrs: {\n                fill: \"#f4f4e8\"\n              },\n              cssClass: 'density',\n              mode: 'horizontal',\n              title: \"Density\",\n              marginBottomTitle: 5,\n              slices: [{\n                label: \"< 1\",\n                max: \"0\",\n                attrs: {\n                  fill: \"#36A2EB\"\n                },\n                legendSpecificAttrs: {\n                  r: 25\n                }\n              }, {\n                label: \"> 1\",\n                min: \"1\",\n                max: \"50000\",\n                attrs: {\n                  fill: \"#87CB14\"\n                },\n                legendSpecificAttrs: {\n                  r: 25\n                }\n              }]\n            }]\n          },\n          plots: plots\n        });\n      }\n    }, {\n      key: \"getRandomColor\",\n      value: function getRandomColor() {\n        var letters = '789ABCD'.split('');\n        var color = '#';\n\n        for (var i = 0; i < 6; i++) {\n          color += letters[Math.round(Math.random() * 6)];\n        }\n\n        return color;\n      }\n    }, {\n      key: \"showInstancesPrivacy\",\n      value: function showInstancesPrivacy(series) {\n        var canvas = document.getElementById('instancesPrivacyChart');\n        var ctx = canvas.getContext('2d');\n        new Chart(ctx, {\n          type: 'pie',\n          data: {\n            datasets: [{\n              data: series,\n              backgroundColor: ['#36A2EB', '#4BC0C0']\n            }],\n            labels: ['Public Instances', 'Private Instances']\n          },\n          options: {}\n        });\n      }\n    }, {\n      key: \"showInstanceFamilies\",\n      value: function showInstanceFamilies(labels, series, colors) {\n        var color = Chart.helpers.color;\n        var config = {\n          data: {\n            datasets: [{\n              data: series,\n              backgroundColor: colors,\n              label: 'My dataset' // for legend\n\n            }],\n            labels: labels\n          },\n          options: {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n              position: 'bottom'\n            },\n            title: {\n              display: false\n            },\n            scale: {\n              ticks: {\n                beginAtZero: true\n              },\n              reverse: false\n            },\n            animation: {\n              animateRotate: false,\n              animateScale: true\n            }\n          }\n        };\n        var ctx = document.getElementById('instancesFamilyChart');\n        var chart = new Chart.PolarArea(ctx, config);\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"bytesToSizeWithUnit\",\n      value: function bytesToSizeWithUnit(bytes) {\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        if (bytes == 0) return '0 Byte';\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString());\n        return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\n      }\n    }]);\n\n    return GcpComputeComponent;\n  }();\n\n  GcpComputeComponent.ɵfac = function GcpComputeComponent_Factory(t) {\n    return new (t || GcpComputeComponent)(i0.ɵɵdirectiveInject(i1.GcpService));\n  };\n\n  GcpComputeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GcpComputeComponent,\n    selectors: [[\"gcp-compute\"]],\n    decls: 175,\n    vars: 23,\n    consts: [[1, \"row\"], [1, \"col-md-4\"], [1, \"card\", \"card-stats\"], [1, \"card-body\"], [1, \"col-5\"], [1, \"icon-big\", \"text-center\", \"icon-warning\"], [\"src\", \"https://cdn.komiser.io/images/services/gcp/compute.png\", 1, \"gcp-logo\"], [1, \"col-7\", \"d-flex\", \"align-items-center\"], [1, \"numbers\"], [1, \"card-category\"], [\"class\", \"card-title\", 4, \"ngIf\"], [\"class\", \"spinner-border spinner-border-sm text-muted\", 4, \"ngIf\"], [1, \"icon-big\", \"text-center\"], [\"src\", \"https://cdn.komiser.io/images/services/gcp/image.png\", 1, \"gcp-logo\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"table\", \"mt-3\"], [2, \"width\", \"300px\"], [4, \"ngFor\", \"ngForOf\"], [\"size\", \"sm\", 3, \"totalItems\", \"itemsPerPage\", \"maxSize\", \"pageChanged\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"id\", \"instancesPrivacyChart\", 1, \"chart-circle\", \"mt-4\", \"mb-3\"], [1, \"card-footer\"], [1, \"legend\"], [1, \"la\", \"la-circle\", \"text-primary\"], [1, \"la\", \"la-circle\", \"text-success\", 2, \"margin-left\", \"10px\"], [\"id\", \"instancesFamilyChart\", 1, \"chart-circle\", \"mt-4\", \"mb-3\", 2, \"max-height\", \"275px\"], [1, \"card\", \"card-stats\", \"card-primary\", \"card-golang\"], [1, \"devicon-go-plain\"], [1, \"card\", \"card-stats\", \"card-warning\", \"card-python\"], [1, \"devicon-python-plain\"], [1, \"card\", \"card-stats\", \"card-success\"], [1, \"devicon-nodejs-plain\"], [\"src\", \"https://cdn.komiser.io/images/services/aws/kube.png\", 1, \"service-logo\", 2, \"padding-bottom\", \"12px\"], [1, \"col-md-8\"], [1, \"kubeclustersmap\"], [1, \"map\"], [1, \"col-md-12\"], [\"id\", \"gaeBandwidthChart\"], [1, \"spinner-border\", \"spinner-border-sm\", \"text-muted\"], [1, \"limit-column\"], [\"autoDraw\", \"true\", \"autoDrawDuration\", \"3000\", \"autoDrawEasing\", \"ease-out\", \"smooth\", \"true\", \"radius\", \"18.5\", \"strokeWidth\", \"0.8\", \"strokeLinecap\", \"round\", 3, \"gradient\", \"data\", \"title\"], [1, \"loader\"]],\n    template: function GcpComputeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 0);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"p\", 9);\n        i0.ɵɵtext(12, \"Running VM Instances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, GcpComputeComponent_h4_13_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(14, GcpComputeComponent_div_14_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelementStart(17, \"div\", 3);\n        i0.ɵɵelementStart(18, \"div\", 0);\n        i0.ɵɵelementStart(19, \"div\", 4);\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelement(21, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 7);\n        i0.ɵɵelementStart(23, \"div\", 8);\n        i0.ɵɵelementStart(24, \"p\", 9);\n        i0.ɵɵtext(25, \"Stopped VM Instances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, GcpComputeComponent_h4_26_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(27, GcpComputeComponent_div_27_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 1);\n        i0.ɵɵelementStart(29, \"div\", 2);\n        i0.ɵɵelementStart(30, \"div\", 3);\n        i0.ɵɵelementStart(31, \"div\", 0);\n        i0.ɵɵelementStart(32, \"div\", 4);\n        i0.ɵɵelementStart(33, \"div\", 12);\n        i0.ɵɵelement(34, \"img\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 7);\n        i0.ɵɵelementStart(36, \"div\", 8);\n        i0.ɵɵelementStart(37, \"p\", 9);\n        i0.ɵɵtext(38, \"Images\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(39, GcpComputeComponent_h4_39_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(40, GcpComputeComponent_div_40_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 0);\n        i0.ɵɵelementStart(42, \"div\", 1);\n        i0.ɵɵelementStart(43, \"div\", 14);\n        i0.ɵɵelementStart(44, \"div\", 15);\n        i0.ɵɵelementStart(45, \"h4\", 16);\n        i0.ɵɵtext(46, \"CPU Usage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"p\", 9);\n        i0.ɵɵtext(48, \"Underutilized VM Instances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 3);\n        i0.ɵɵelementStart(50, \"table\", 17);\n        i0.ɵɵelementStart(51, \"thead\");\n        i0.ɵɵelementStart(52, \"tr\");\n        i0.ɵɵelementStart(53, \"th\", 18);\n        i0.ɵɵtext(54, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"th\");\n        i0.ɵɵtext(56, \"CPU Utilization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"tbody\");\n        i0.ɵɵtemplate(58, GcpComputeComponent_tr_58_Template, 5, 5, \"tr\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"ngb-pagination\", 20);\n        i0.ɵɵlistener(\"pageChanged\", function GcpComputeComponent_Template_ngb_pagination_pageChanged_59_listener($event) {\n          return ctx.pageChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 1);\n        i0.ɵɵelementStart(61, \"div\", 14);\n        i0.ɵɵelementStart(62, \"div\", 15);\n        i0.ɵɵelementStart(63, \"h4\", 16);\n        i0.ɵɵtext(64, \"Public vs Private Instances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"p\", 9);\n        i0.ɵɵtext(66, \"Instances with Public IP Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 3);\n        i0.ɵɵtemplate(68, GcpComputeComponent_div_68_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelement(69, \"canvas\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"div\", 23);\n        i0.ɵɵelementStart(71, \"div\", 24);\n        i0.ɵɵelement(72, \"i\", 25);\n        i0.ɵɵtext(73, \" Public Instances \");\n        i0.ɵɵelement(74, \"i\", 26);\n        i0.ɵɵtext(75, \" Private Instances \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"div\", 1);\n        i0.ɵɵelementStart(77, \"div\", 14);\n        i0.ɵɵelementStart(78, \"div\", 15);\n        i0.ɵɵelementStart(79, \"h4\", 16);\n        i0.ɵɵtext(80, \"Compute Instance Machine Types\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"p\", 9);\n        i0.ɵɵtext(82, \"Running VM Instances per Machine Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"div\", 3);\n        i0.ɵɵtemplate(84, GcpComputeComponent_div_84_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelement(85, \"canvas\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"div\", 0);\n        i0.ɵɵelementStart(87, \"div\", 1);\n        i0.ɵɵelementStart(88, \"div\", 28);\n        i0.ɵɵelementStart(89, \"div\", 3);\n        i0.ɵɵelementStart(90, \"div\", 0);\n        i0.ɵɵelementStart(91, \"div\", 4);\n        i0.ɵɵelementStart(92, \"div\", 12);\n        i0.ɵɵelement(93, \"i\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"div\", 7);\n        i0.ɵɵelementStart(95, \"div\", 8);\n        i0.ɵɵelementStart(96, \"p\", 9);\n        i0.ɵɵtext(97, \"Golang Functions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(98, GcpComputeComponent_h4_98_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(99, GcpComputeComponent_div_99_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"div\", 1);\n        i0.ɵɵelementStart(101, \"div\", 30);\n        i0.ɵɵelementStart(102, \"div\", 3);\n        i0.ɵɵelementStart(103, \"div\", 0);\n        i0.ɵɵelementStart(104, \"div\", 4);\n        i0.ɵɵelementStart(105, \"div\", 12);\n        i0.ɵɵelement(106, \"i\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"div\", 7);\n        i0.ɵɵelementStart(108, \"div\", 8);\n        i0.ɵɵelementStart(109, \"p\", 9);\n        i0.ɵɵtext(110, \"Python Functions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(111, GcpComputeComponent_h4_111_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(112, GcpComputeComponent_div_112_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 1);\n        i0.ɵɵelementStart(114, \"div\", 32);\n        i0.ɵɵelementStart(115, \"div\", 3);\n        i0.ɵɵelementStart(116, \"div\", 0);\n        i0.ɵɵelementStart(117, \"div\", 4);\n        i0.ɵɵelementStart(118, \"div\", 12);\n        i0.ɵɵelement(119, \"i\", 33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"div\", 7);\n        i0.ɵɵelementStart(121, \"div\", 8);\n        i0.ɵɵelementStart(122, \"p\", 9);\n        i0.ɵɵtext(123, \"Node.JS Functions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(124, GcpComputeComponent_h4_124_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(125, GcpComputeComponent_div_125_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"div\", 0);\n        i0.ɵɵelementStart(127, \"div\", 1);\n        i0.ɵɵelementStart(128, \"div\", 2);\n        i0.ɵɵelementStart(129, \"div\", 3);\n        i0.ɵɵelementStart(130, \"div\", 0);\n        i0.ɵɵelementStart(131, \"div\", 4);\n        i0.ɵɵelementStart(132, \"div\", 12);\n        i0.ɵɵelement(133, \"img\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"div\", 7);\n        i0.ɵɵelementStart(135, \"div\", 8);\n        i0.ɵɵelementStart(136, \"p\", 9);\n        i0.ɵɵtext(137, \"Kubernetes Clusters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(138, GcpComputeComponent_h4_138_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(139, GcpComputeComponent_div_139_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(140, \"div\", 2);\n        i0.ɵɵelementStart(141, \"div\", 3);\n        i0.ɵɵelementStart(142, \"div\", 0);\n        i0.ɵɵelementStart(143, \"div\", 4);\n        i0.ɵɵelementStart(144, \"div\", 12);\n        i0.ɵɵelement(145, \"img\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(146, \"div\", 7);\n        i0.ɵɵelementStart(147, \"div\", 8);\n        i0.ɵɵelementStart(148, \"p\", 9);\n        i0.ɵɵtext(149, \"Kubernetes Nodes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(150, GcpComputeComponent_h4_150_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(151, GcpComputeComponent_div_151_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(152, \"div\", 35);\n        i0.ɵɵelementStart(153, \"div\", 14);\n        i0.ɵɵelementStart(154, \"div\", 15);\n        i0.ɵɵelementStart(155, \"h4\", 16);\n        i0.ɵɵtext(156, \"Kubernetes Clusters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"p\", 9);\n        i0.ɵɵtext(158, \"Number of Clusters by Region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(159, \"div\", 3);\n        i0.ɵɵelementStart(160, \"div\", 36);\n        i0.ɵɵelementStart(161, \"div\", 37);\n        i0.ɵɵelementStart(162, \"span\");\n        i0.ɵɵtext(163, \"Alternative content for the map\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(164, \"div\", 0);\n        i0.ɵɵelementStart(165, \"div\", 38);\n        i0.ɵɵelementStart(166, \"div\", 14);\n        i0.ɵɵelementStart(167, \"div\", 15);\n        i0.ɵɵelementStart(168, \"h4\", 16);\n        i0.ɵɵtext(169, \"GAE Applications\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(170, \"p\", 9);\n        i0.ɵɵtext(171, \"Delta count of outgoing network bandwidth.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(172, \"div\", 3);\n        i0.ɵɵelementStart(173, \"div\", 39);\n        i0.ɵɵtemplate(174, GcpComputeComponent_div_174_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingRunningInstances);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingRunningInstances);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingStoppedInstances);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingStoppedInstances);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingImages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingImages);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.returnedInstancesWithCPUUtilization);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"totalItems\", ctx.instancesWithCPUUtilization.length)(\"itemsPerPage\", 3)(\"maxSize\", 3);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingInstancesPrivacyChart);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingInstancesFamilyChart);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingCloudFunctions);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingKubernetesClusters);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingKubernetesClusters);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingKubernetesNodes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingKubernetesNodes);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingGaeBandwidthChart);\n      }\n    },\n    styles: [\".card-golang[_ngcontent-%COMP%]{background:#72CEDD!important}.card-python[_ngcontent-%COMP%]{background:#FFD344!important}.limit-column[_ngcontent-%COMP%]{max-width:300px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.gcp-logo[_ngcontent-%COMP%]{width:40px!important;padding-bottom:10px!important}#gaeBandwidthChart[_ngcontent-%COMP%]{min-height:150px}\"]\n  });\n  return GcpComputeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}