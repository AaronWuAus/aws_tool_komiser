{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StoreService } from './store.service';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./store.service\";\nexport var AwsService = /*#__PURE__*/(function () {\n  var AwsService = /*#__PURE__*/function () {\n    function AwsService(http, storeService) {\n      _classCallCheck(this, AwsService);\n\n      this.http = http;\n      this.storeService = storeService;\n      this.BASE_URL = \"\".concat(environment.apiUrl, \"/aws\");\n    }\n\n    _createClass(AwsService, [{\n      key: \"getProfiles\",\n      value: function getProfiles() {\n        var _this = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/profiles\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCurrentCost\",\n      value: function getCurrentCost() {\n        var _this2 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cost/current\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this2.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCostAndUsage\",\n      value: function getCostAndUsage() {\n        var _this3 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cost/history\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this3.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getIAMUsers\",\n      value: function getIAMUsers() {\n        var _this4 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/users\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this4.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getInstancesPerRegion\",\n      value: function getInstancesPerRegion() {\n        var _this5 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ec2/regions\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this5.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getUsedRegions\",\n      value: function getUsedRegions() {\n        var _this6 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/resources/regions\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this6.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudwatchAlarms\",\n      value: function getCloudwatchAlarms() {\n        var _this7 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudwatch/alarms\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this7.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLambdaFunctions\",\n      value: function getLambdaFunctions() {\n        var _this8 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/lambda/functions\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this8.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLambdaInvocationMetrics\",\n      value: function getLambdaInvocationMetrics() {\n        var _this9 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/lambda/invocations\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this9.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getAccountName\",\n      value: function getAccountName() {\n        var _this10 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/account\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this10.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getNumberOfS3Buckets\",\n      value: function getNumberOfS3Buckets() {\n        var _this11 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/s3/buckets\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this11.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBucketObjects\",\n      value: function getBucketObjects() {\n        var _this12 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/s3/objects\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this12.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBucketSize\",\n      value: function getBucketSize() {\n        var _this13 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/s3/size\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this13.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getEBS\",\n      value: function getEBS() {\n        var _this14 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ebs\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this14.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRDSInstances\",\n      value: function getRDSInstances() {\n        var _this15 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/rds/instances\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this15.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDynamoDBTables\",\n      value: function getDynamoDBTables() {\n        var _this16 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dynamodb/tables\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this16.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getElasticacheClusters\",\n      value: function getElasticacheClusters() {\n        var _this17 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/elasticache/clusters\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this17.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVirtualPrivateClouds\",\n      value: function getVirtualPrivateClouds() {\n        var _this18 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this18.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getAccessControlLists\",\n      value: function getAccessControlLists() {\n        var _this19 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/acl\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this19.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRouteTables\",\n      value: function getRouteTables() {\n        var _this20 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/route_tables\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this20.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudFrontRequests\",\n      value: function getCloudFrontRequests() {\n        var _this21 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudfront/requests\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this21.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudFrontDistributions\",\n      value: function getCloudFrontDistributions() {\n        var _this22 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudfront/distributions\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this22.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getApiGatewayRequests\",\n      value: function getApiGatewayRequests() {\n        var _this23 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/apigateway/requests\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this23.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getApiGatewayRestAPIs\",\n      value: function getApiGatewayRestAPIs() {\n        var _this24 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/apigateway/apis\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this24.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getELBRequests\",\n      value: function getELBRequests() {\n        var _this25 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/elb/requests\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this25.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getELBFamily\",\n      value: function getELBFamily() {\n        var _this26 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/elb/family\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this26.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKMSKeys\",\n      value: function getKMSKeys() {\n        var _this27 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/kms\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this27.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSecurityGroups\",\n      value: function getSecurityGroups() {\n        var _this28 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security_groups\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this28.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKeyPairs\",\n      value: function getKeyPairs() {\n        var _this29 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/key_pairs\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this29.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getACMListCertificates\",\n      value: function getACMListCertificates() {\n        var _this30 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/acm/certificates\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this30.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getACMExpiredCertificates\",\n      value: function getACMExpiredCertificates() {\n        var _this31 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/acm/expired\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this31.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getUnrestrictedSecurityGroups\",\n      value: function getUnrestrictedSecurityGroups() {\n        var _this32 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security_groups/unrestricted\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this32.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSQSPublishedMessagesMetrics\",\n      value: function getSQSPublishedMessagesMetrics() {\n        var _this33 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/sqs/messages\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this33.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSQSQueues\",\n      value: function getSQSQueues() {\n        var _this34 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/sqs/queues\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this34.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSNSTopics\",\n      value: function getSNSTopics() {\n        var _this35 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/sns/topics\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this35.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getActiveMQBrokers\",\n      value: function getActiveMQBrokers() {\n        var _this36 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/mq/brokers\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this36.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKinesisStreams\",\n      value: function getKinesisStreams() {\n        var _this37 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/kinesis/streams\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this37.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKinesisShards\",\n      value: function getKinesisShards() {\n        var _this38 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/kinesis/shards\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this38.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getGlueCrawlers\",\n      value: function getGlueCrawlers() {\n        var _this39 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/glue/crawlers\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this39.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getGlueJobs\",\n      value: function getGlueJobs() {\n        var _this40 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/glue/jobs\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this40.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDataPipelines\",\n      value: function getDataPipelines() {\n        var _this41 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/datapipeline/pipelines\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this41.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getESDomains\",\n      value: function getESDomains() {\n        var _this42 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/es/domains\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this42.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSWFDomains\",\n      value: function getSWFDomains() {\n        var _this43 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/swf/domains\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this43.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getOpenSupportTickets\",\n      value: function getOpenSupportTickets() {\n        var _this44 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/support/open\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this44.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSupportTicketsHistory\",\n      value: function getSupportTicketsHistory() {\n        var _this45 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/support/history\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this45.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getECS\",\n      value: function getECS() {\n        var _this46 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ecs\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this46.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRoute53Records\",\n      value: function getRoute53Records() {\n        var _this47 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/route53/records\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this47.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRoute53Zones\",\n      value: function getRoute53Zones() {\n        var _this48 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/route53/zones\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this48.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLogsVolume\",\n      value: function getLogsVolume() {\n        var _this49 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/logs/volume\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this49.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getConsoleLoginEvents\",\n      value: function getConsoleLoginEvents() {\n        var _this50 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudtrail/sign_in_event\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this50.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLambdaErrors\",\n      value: function getLambdaErrors() {\n        var _this51 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/lambda/errors\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this51.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getReservedInstances\",\n      value: function getReservedInstances() {\n        var _this52 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ec2/reserved\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this52.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getScheduledInstances\",\n      value: function getScheduledInstances() {\n        var _this53 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ec2/scheduled\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this53.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSpotInstances\",\n      value: function getSpotInstances() {\n        var _this54 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ec2/spot\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this54.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCostPerInstanceType\",\n      value: function getCostPerInstanceType() {\n        var _this55 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cost/instance_type\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this55.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getEKSClusters\",\n      value: function getEKSClusters() {\n        var _this56 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/eks/clusters\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this56.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getConsoleLoginSourceIps\",\n      value: function getConsoleLoginSourceIps() {\n        var _this57 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudtrail/source_ip\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this57.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLogsRetentionPeriod\",\n      value: function getLogsRetentionPeriod() {\n        var _this58 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/logs/retention\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this58.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getNatGatewayTraffic\",\n      value: function getNatGatewayTraffic() {\n        var _this59 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/nat/traffic\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this59.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getOrganization\",\n      value: function getOrganization() {\n        var _this60 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/organization\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this60.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getServiceLimits\",\n      value: function getServiceLimits() {\n        var _this61 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/service/limits\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this61.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getEmptyBuckets\",\n      value: function getEmptyBuckets() {\n        var _this62 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/s3/empty\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this62.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDetachedElasticIps\",\n      value: function getDetachedElasticIps() {\n        var _this63 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/eip/detached\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this63.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRedshiftClusters\",\n      value: function getRedshiftClusters() {\n        var _this64 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/redshift/clusters\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this64.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVPCSubnets\",\n      value: function getVPCSubnets() {\n        var _this65 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/subnets\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this65.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getForecastPrice\",\n      value: function getForecastPrice() {\n        var _this66 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cost/forecast\"), {\n          headers: this.getHeaders()\n        }).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this66.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getHeaders\",\n      value: function getHeaders() {\n        var headers = new HttpHeaders();\n        headers = headers.set(\"profile\", localStorage.getItem(\"profile\"));\n        return headers;\n      }\n    }]);\n\n    return AwsService;\n  }();\n\n  AwsService.ɵfac = function AwsService_Factory(t) {\n    return new (t || AwsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StoreService));\n  };\n\n  AwsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AwsService,\n    factory: AwsService.ɵfac\n  });\n  return AwsService;\n})();","map":null,"metadata":{},"sourceType":"module"}