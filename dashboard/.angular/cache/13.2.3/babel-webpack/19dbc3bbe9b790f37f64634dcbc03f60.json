{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport var StoreService = /*#__PURE__*/(function () {\n  var StoreService = /*#__PURE__*/function () {\n    function StoreService() {\n      _classCallCheck(this, StoreService);\n\n      this.notifications = new Map();\n      this.newNotification = new Subject();\n      this.providerChanged = new Subject();\n      this.profileChanged = new Subject();\n\n      if (localStorage.getItem('provider')) {\n        this.provider = localStorage.getItem('provider');\n      } else {\n        this.provider = 'aws';\n        localStorage.setItem('provider', this.provider);\n      }\n\n      this.providerChanged.next(this.provider);\n    }\n\n    _createClass(StoreService, [{\n      key: \"getProvider\",\n      value: function getProvider() {\n        return this.provider;\n      }\n    }, {\n      key: \"add\",\n      value: function add(notification) {\n        var item = this.notifications[notification];\n\n        if (item) {\n          this.notifications[notification] = {\n            content: notification,\n            timestamp: new Date(),\n            total: item.total + 1\n          };\n        } else {\n          this.notifications[notification] = {\n            content: notification,\n            timestamp: new Date(),\n            total: 1\n          };\n        }\n\n        this.newNotification.next(this.notifications);\n      }\n    }, {\n      key: \"list\",\n      value: function list() {\n        return this.notifications;\n      }\n    }, {\n      key: \"cleanNotifications\",\n      value: function cleanNotifications() {\n        this.notifications = new Map();\n        this.newNotification.next(this.notifications);\n      }\n    }, {\n      key: \"onProviderChanged\",\n      value: function onProviderChanged(provider) {\n        this.provider = provider;\n        localStorage.setItem('provider', this.provider);\n        this.providerChanged.next(this.provider);\n        this.notifications = new Map();\n        this.newNotification.next(this.notifications);\n      }\n    }, {\n      key: \"onProfileChanged\",\n      value: function onProfileChanged(profile) {\n        this.profileChanged.next(profile);\n        this.notifications = new Map();\n        this.newNotification.next(this.notifications);\n      }\n    }]);\n\n    return StoreService;\n  }();\n\n  StoreService.ɵfac = function StoreService_Factory(t) {\n    return new (t || StoreService)();\n  };\n\n  StoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StoreService,\n    factory: StoreService.ɵfac\n  });\n  return StoreService;\n})();","map":null,"metadata":{},"sourceType":"module"}