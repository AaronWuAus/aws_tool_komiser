{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { StoreService } from './store.service';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./store.service\";\nexport var GcpService = /*#__PURE__*/(function () {\n  var GcpService = /*#__PURE__*/function () {\n    function GcpService(http, storeService) {\n      _classCallCheck(this, GcpService);\n\n      this.http = http;\n      this.storeService = storeService;\n      this.BASE_URL = \"\".concat(environment.apiUrl, \"/gcp\");\n    }\n\n    _createClass(GcpService, [{\n      key: \"getProjects\",\n      value: function getProjects() {\n        var _this = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/resourcemanager/projects\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getComputeInstances\",\n      value: function getComputeInstances() {\n        var _this2 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/instances\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this2.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getIamRoles\",\n      value: function getIamRoles() {\n        var _this3 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/roles\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this3.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getStorageBuckets\",\n      value: function getStorageBuckets() {\n        var _this4 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/buckets\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this4.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getComputeDisks\",\n      value: function getComputeDisks() {\n        var _this5 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/disks\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this5.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDNSZones\",\n      value: function getDNSZones() {\n        var _this6 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dns/zones\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this6.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getPubSubTopics\",\n      value: function getPubSubTopics() {\n        var _this7 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/pubsub/topics\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this7.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudFunctions\",\n      value: function getCloudFunctions() {\n        var _this8 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloudfunctions/functions\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this8.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSqlInstances\",\n      value: function getSqlInstances() {\n        var _this9 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/sql/instances\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this9.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVpcNetworks\",\n      value: function getVpcNetworks() {\n        var _this10 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/networks\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this10.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVpcFirewalls\",\n      value: function getVpcFirewalls() {\n        var _this11 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/firewalls\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this11.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVpcRouters\",\n      value: function getVpcRouters() {\n        var _this12 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/routers\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this12.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDiskSnapshots\",\n      value: function getDiskSnapshots() {\n        var _this13 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/snapshots\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this13.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBucketsSize\",\n      value: function getBucketsSize() {\n        var _this14 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/size\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this14.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBucketsObjects\",\n      value: function getBucketsObjects() {\n        var _this15 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/storage/objects\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this15.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getIngestedLoggingBytes\",\n      value: function getIngestedLoggingBytes() {\n        var _this16 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/logging/bytes_ingested\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this16.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKubernetesClusters\",\n      value: function getKubernetesClusters() {\n        var _this17 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/kubernetes/clusters\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this17.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getComputeImages\",\n      value: function getComputeImages() {\n        var _this18 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/images\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this18.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getRedisInstances\",\n      value: function getRedisInstances() {\n        var _this19 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/redis/instances\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this19.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getComputeCPUUtilization\",\n      value: function getComputeCPUUtilization() {\n        var _this20 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/cpu\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this20.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getIAMUsers\",\n      value: function getIAMUsers() {\n        var _this21 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/users\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this21.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBigQueryStatements\",\n      value: function getBigQueryStatements() {\n        var _this22 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/bigquery/statements\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this22.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBigQueryStorage\",\n      value: function getBigQueryStorage() {\n        var _this23 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/bigquery/storage\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this23.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBigQueryTables\",\n      value: function getBigQueryTables() {\n        var _this24 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/bigquery/tables\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this24.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBigQueryDatasets\",\n      value: function getBigQueryDatasets() {\n        var _this25 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/bigquery/datasets\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this25.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getQuotas\",\n      value: function getQuotas() {\n        var _this26 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/compute/quotas\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this26.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLBRequests\",\n      value: function getLBRequests() {\n        var _this27 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/lb/requests\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this27.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getAPIRequests\",\n      value: function getAPIRequests() {\n        var _this28 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/api/requests\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this28.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getTotalLoadBalancers\",\n      value: function getTotalLoadBalancers() {\n        var _this29 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/lb/total\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this29.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVPCSubnets\",\n      value: function getVPCSubnets() {\n        var _this30 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/subnets\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this30.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVPCAddresses\",\n      value: function getVPCAddresses() {\n        var _this31 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpc/addresses\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this31.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVPNTunnels\",\n      value: function getVPNTunnels() {\n        var _this32 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/vpn/tunnels\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this32.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSSLPolicies\",\n      value: function getSSLPolicies() {\n        var _this33 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ssl/policies\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this33.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSSLCertificates\",\n      value: function getSSLCertificates() {\n        var _this34 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/ssl/certificates\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this34.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSecurityPolicies\",\n      value: function getSecurityPolicies() {\n        var _this35 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/security/policies\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this35.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKMSCryptoKeys\",\n      value: function getKMSCryptoKeys() {\n        var _this36 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/kms/cryptokeys\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this36.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getAppEngineBandwidth\",\n      value: function getAppEngineBandwidth() {\n        var _this37 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/gae/bandwidth\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this37.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getEnabledAPIs\",\n      value: function getEnabledAPIs() {\n        var _this38 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/serviceusage/apis\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this38.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDataprocJobs\",\n      value: function getDataprocJobs() {\n        var _this39 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dataproc/jobs\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this39.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDataprocClusters\",\n      value: function getDataprocClusters() {\n        var _this40 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dataproc/clusters\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this40.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBillingLastSixMonths\",\n      value: function getBillingLastSixMonths() {\n        var _this41 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/billing/history\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this41.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getBillingPerService\",\n      value: function getBillingPerService() {\n        var _this42 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/billing/service\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this42.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDnsARecords\",\n      value: function getDnsARecords() {\n        var _this43 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dns/records\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this43.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getServiceAccounts\",\n      value: function getServiceAccounts() {\n        var _this44 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/iam/service_accounts\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this44.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getDataflowJobs\",\n      value: function getDataflowJobs() {\n        var _this45 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/dataflow/jobs\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this45.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getNatGateways\",\n      value: function getNatGateways() {\n        var _this46 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/nat/gateways\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this46.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }]);\n\n    return GcpService;\n  }();\n\n  GcpService.ɵfac = function GcpService_Factory(t) {\n    return new (t || GcpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StoreService));\n  };\n\n  GcpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GcpService,\n    factory: GcpService.ɵfac\n  });\n  return GcpService;\n})();","map":null,"metadata":{},"sourceType":"module"}