{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { StoreService } from './store.service';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./store.service\";\nexport var OvhService = /*#__PURE__*/(function () {\n  var OvhService = /*#__PURE__*/function () {\n    function OvhService(http, storeService) {\n      _classCallCheck(this, OvhService);\n\n      this.http = http;\n      this.storeService = storeService;\n      this.BASE_URL = \"\".concat(environment.apiUrl, \"/ovh\");\n    }\n\n    _createClass(OvhService, [{\n      key: \"getCloudProjects\",\n      value: function getCloudProjects() {\n        var _this = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/projects\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudInstances\",\n      value: function getCloudInstances() {\n        var _this2 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/instances\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this2.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getStorageContainers\",\n      value: function getStorageContainers() {\n        var _this3 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/storage\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this3.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getUsers\",\n      value: function getUsers() {\n        var _this4 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/users\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this4.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudVolumes\",\n      value: function getCloudVolumes() {\n        var _this5 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/volumes\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this5.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudSnapshots\",\n      value: function getCloudSnapshots() {\n        var _this6 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/snapshots\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this6.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudAlerts\",\n      value: function getCloudAlerts() {\n        var _this7 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/alerts\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this7.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCurrentBill\",\n      value: function getCurrentBill() {\n        var _this8 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/current\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this8.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudImages\",\n      value: function getCloudImages() {\n        var _this9 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/images\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this9.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getCloudIps\",\n      value: function getCloudIps() {\n        var _this10 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/ip\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this10.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getPublicNetworks\",\n      value: function getPublicNetworks() {\n        var _this11 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/network/public\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this11.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getPrivateNetworks\",\n      value: function getPrivateNetworks() {\n        var _this12 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/network/private\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this12.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getFailoverIps\",\n      value: function getFailoverIps() {\n        var _this13 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/failover/ip\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this13.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getVRacks\",\n      value: function getVRacks() {\n        var _this14 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/vrack\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this14.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKubeClusters\",\n      value: function getKubeClusters() {\n        var _this15 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/kube/clusters\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this15.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getKubeNodes\",\n      value: function getKubeNodes() {\n        var _this16 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/kube/nodes\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this16.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSSHKeys\",\n      value: function getSSHKeys() {\n        var _this17 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/sshkeys\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this17.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getLimits\",\n      value: function getLimits() {\n        var _this18 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/quotas\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this18.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSSLCertificates\",\n      value: function getSSLCertificates() {\n        var _this19 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/ssl/certificates\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this19.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getSSLGateways\",\n      value: function getSSLGateways() {\n        var _this20 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/ssl/gateways\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this20.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getProfile\",\n      value: function getProfile() {\n        var _this21 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/profile\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this21.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }, {\n      key: \"getTickets\",\n      value: function getTickets() {\n        var _this22 = this;\n\n        return this.http.get(\"\".concat(this.BASE_URL, \"/cloud/tickets\")).pipe(catchError(function (err) {\n          var payload = JSON.parse(err._body);\n          if (payload && payload.error) _this22.storeService.add(payload.error);\n          return observableThrowError(err.json().error);\n        }));\n      }\n    }]);\n\n    return OvhService;\n  }();\n\n  OvhService.ɵfac = function OvhService_Factory(t) {\n    return new (t || OvhService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StoreService));\n  };\n\n  OvhService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OvhService,\n    factory: OvhService.ɵfac\n  });\n  return OvhService;\n})();","map":null,"metadata":{},"sourceType":"module"}