{"ast":null,"code":"import _classCallCheck from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mlabouardy/go/src/github.com/mlabouardy/komiser/dashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { DigitaloceanService } from '../../digitalocean.service';\nimport { StoreService } from '../../store.service';\nimport 'chartist-plugin-tooltips';\nimport 'jquery-mapael';\nimport 'jquery-mapael/js/maps/world_countries.js';\nimport * as $ from \"jquery\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../digitalocean.service\";\nimport * as i2 from \"../../store.service\";\n\nfunction DigitaloceanDashboardComponent_h4_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.projects);\n  }\n}\n\nfunction DigitaloceanDashboardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 19);\n  }\n}\n\nfunction DigitaloceanDashboardComponent_h4_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.usedRegions);\n  }\n}\n\nfunction DigitaloceanDashboardComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 19);\n  }\n}\n\nexport var DigitaloceanDashboardComponent = /*#__PURE__*/(function () {\n  var DigitaloceanDashboardComponent = /*#__PURE__*/function () {\n    function DigitaloceanDashboardComponent(digitaloceanService, storeService) {\n      var _this = this;\n\n      _classCallCheck(this, DigitaloceanDashboardComponent);\n\n      this.digitaloceanService = digitaloceanService;\n      this.storeService = storeService;\n      this.loadingProjects = true;\n      this.loadingUsedRegions = true;\n      this.regions = new Map([[\"nyc\", {\n        \"latitude\": \"40.712776\",\n        \"longitude\": \"-74.005974\"\n      }], [\"ams\", {\n        \"latitude\": \"52.370216\",\n        \"longitude\": \"4.895168\"\n      }], [\"sfo\", {\n        \"latitude\": \"37.774929\",\n        \"longitude\": \"-122.419418\"\n      }], [\"sgp\", {\n        \"latitude\": \"1.352083\",\n        \"longitude\": \"103.819839\"\n      }], [\"lon\", {\n        \"latitude\": \"51.507351\",\n        \"longitude\": \"-0.127758\"\n      }], [\"fra\", {\n        \"latitude\": \"50.110924\",\n        \"longitude\": \"8.682127\"\n      }], [\"tor\", {\n        \"latitude\": \"43.653225\",\n        \"longitude\": \"-79.383186\"\n      }], [\"blr\", {\n        \"latitude\": \"12.971599\",\n        \"longitude\": \"77.594566\"\n      }]]);\n      this.initState();\n      this._subscription = this.storeService.profileChanged.subscribe(function (account) {\n        _this.initState();\n      });\n    }\n\n    _createClass(DigitaloceanDashboardComponent, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._subscription.unsubscribe();\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"initState\",\n      value: function initState() {\n        var _this2 = this;\n\n        this.projects = 0;\n        this.usedRegions = 0;\n        this.loadingProjects = true;\n        this.loadingUsedRegions = true;\n        this.digitaloceanService.getProjects().subscribe(function (data) {\n          _this2.projects = data;\n          _this2.loadingProjects = false;\n        }, function (err) {\n          _this2.loadingProjects = false;\n          _this2.projects = 0;\n        });\n        this.digitaloceanService.getDroplets().subscribe(function (data) {\n          var _usedRegions = new Map();\n\n          var plots = {};\n          var scope = _this2;\n          data.forEach(function (droplet) {\n            var region = droplet.region.substring(0, droplet.region.length - 1);\n            _usedRegions[region] = (_usedRegions[region] ? _usedRegions[region] : 0) + 1;\n          });\n\n          for (var region in _usedRegions) {\n            _this2.usedRegions++;\n            plots[region] = {\n              latitude: scope.regions.get(region).latitude,\n              longitude: scope.regions.get(region).longitude,\n              value: [_usedRegions[region], 1],\n              tooltip: {\n                content: \"\".concat(region, \"<br />Droplets: \").concat(_usedRegions[region])\n              }\n            };\n          }\n\n          Array.from(_this2.regions.keys()).forEach(function (region) {\n            var found = false;\n\n            for (var _region in plots) {\n              if (_region == region) {\n                found = true;\n              }\n            }\n\n            if (!found) {\n              plots[region] = {\n                latitude: _this2.regions.get(region).latitude,\n                longitude: _this2.regions.get(region).longitude,\n                value: [_usedRegions[region], 0],\n                tooltip: {\n                  content: \"\".concat(region, \"<br />Droplets: 0\")\n                }\n              };\n            }\n          });\n          _this2.loadingUsedRegions = false;\n\n          _this2.showDropletsPerRegion(plots);\n        }, function (err) {\n          _this2.loadingUsedRegions = false;\n          _this2.usedRegions = 0;\n        });\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.showDropletsPerRegion({});\n      }\n    }, {\n      key: \"showDropletsPerRegion\",\n      value: function showDropletsPerRegion(plots) {\n        var canvas = $(\".mapregions\");\n        canvas.mapael({\n          map: {\n            name: \"world_countries\",\n            zoom: {\n              enabled: true,\n              maxLevel: 10\n            },\n            defaultPlot: {\n              attrs: {\n                fill: \"#004a9b\",\n                opacity: 0.6\n              }\n            },\n            defaultArea: {\n              attrs: {\n                fill: \"#e4e4e4\",\n                stroke: \"#fafafa\"\n              },\n              attrsHover: {\n                fill: \"#FBAD4B\"\n              },\n              text: {\n                attrs: {\n                  fill: \"#505444\"\n                },\n                attrsHover: {\n                  fill: \"#000\"\n                }\n              }\n            }\n          },\n          legend: {\n            plot: [{\n              labelAttrs: {\n                fill: \"#f4f4e8\"\n              },\n              titleAttrs: {\n                fill: \"#f4f4e8\"\n              },\n              cssClass: 'density',\n              mode: 'horizontal',\n              title: \"Density\",\n              marginBottomTitle: 5,\n              slices: [{\n                label: \"< 1\",\n                max: \"0\",\n                attrs: {\n                  fill: \"#36A2EB\"\n                },\n                legendSpecificAttrs: {\n                  r: 25\n                }\n              }, {\n                label: \"> 1\",\n                min: \"1\",\n                max: \"50000\",\n                attrs: {\n                  fill: \"#87CB14\"\n                },\n                legendSpecificAttrs: {\n                  r: 25\n                }\n              }]\n            }]\n          },\n          plots: plots\n        });\n      }\n    }]);\n\n    return DigitaloceanDashboardComponent;\n  }();\n\n  DigitaloceanDashboardComponent.ɵfac = function DigitaloceanDashboardComponent_Factory(t) {\n    return new (t || DigitaloceanDashboardComponent)(i0.ɵɵdirectiveInject(i1.DigitaloceanService), i0.ɵɵdirectiveInject(i2.StoreService));\n  };\n\n  DigitaloceanDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DigitaloceanDashboardComponent,\n    selectors: [[\"digitalocean-dashboard\"]],\n    decls: 41,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col-md-6\"], [1, \"card\", \"card-stats\"], [1, \"card-body\"], [1, \"col-5\"], [1, \"icon-big\", \"text-center\"], [1, \"la\", \"la-building\"], [1, \"col-7\", \"d-flex\", \"align-items-center\"], [1, \"numbers\"], [1, \"card-category\"], [\"class\", \"card-title\", 4, \"ngIf\"], [\"class\", \"spinner-border spinner-border-sm text-muted\", 4, \"ngIf\"], [1, \"la\", \"la-map-marker\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"mapregions\"], [1, \"map\"], [1, \"spinner-border\", \"spinner-border-sm\", \"text-muted\"]],\n    template: function DigitaloceanDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 0);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"p\", 9);\n        i0.ɵɵtext(12, \"Projects\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, DigitaloceanDashboardComponent_h4_13_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(14, DigitaloceanDashboardComponent_div_14_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelementStart(17, \"div\", 3);\n        i0.ɵɵelementStart(18, \"div\", 0);\n        i0.ɵɵelementStart(19, \"div\", 4);\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵelement(21, \"i\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 7);\n        i0.ɵɵelementStart(23, \"div\", 8);\n        i0.ɵɵelementStart(24, \"p\", 9);\n        i0.ɵɵtext(25, \"Regions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, DigitaloceanDashboardComponent_h4_26_Template, 2, 1, \"h4\", 10);\n        i0.ɵɵtemplate(27, DigitaloceanDashboardComponent_div_27_Template, 1, 0, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 0);\n        i0.ɵɵelementStart(29, \"div\", 13);\n        i0.ɵɵelementStart(30, \"div\", 14);\n        i0.ɵɵelementStart(31, \"div\", 15);\n        i0.ɵɵelementStart(32, \"h4\", 16);\n        i0.ɵɵtext(33, \"Overview of Droplets\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"p\", 9);\n        i0.ɵɵtext(35, \"Number of Droplets by Region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 3);\n        i0.ɵɵelementStart(37, \"div\", 17);\n        i0.ɵɵelementStart(38, \"div\", 18);\n        i0.ɵɵelementStart(39, \"span\");\n        i0.ɵɵtext(40, \"Alternative content for the map\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingProjects);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingProjects);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingUsedRegions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingUsedRegions);\n      }\n    },\n    styles: [\"\"]\n  });\n  return DigitaloceanDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}